.navbar {
            width: 100%;
            height: 80px;
            display: flex;
            justify-content: center;
            align-items: center;
            position: fixed;
            top: 0;
            left: 0;
            background: rgba(255, 255, 255, 0.2);
            box-shadow: 0 8px 32px 0 rgba(31, 38, 135, 0.37);
            backdrop-filter: blur(10px);
            -webkit-backdrop-filter: blur(10px);
            border-radius: 0 0 16px 16px;
            border: 1px solid rgba(255, 255, 255, 0.18);
            z-index: 1000;
}
.navbar a {
            color: #fff;
            padding: 16px 20px;
            text-decoration: none;
            text-align: center;
            font-weight: bold;
            font-size: 18px;
            transition: background 0.2s, color 0.2s;
            border-radius: 8px;
            margin: 0 8px;
}
.navbar a:hover {
            background: rgba(255,255,255,0.3);
            color: #222;
}
body > *:not(.navbar) {
            padding-top: 80px;
}
/* Mobile off-canvas (right) menu using the checkbox toggle (no JS required) */

@media (max-width: 768px) {
    .navbar {
        height: auto;
        padding: 10px 12px;
        align-items: center;
        flex-wrap: wrap;
        justify-content: flex-start;
        gap: 8px;
    }

    .navbar a {
        flex: 0 0 auto;
        padding: 10px 14px;
        font-size: 16px;
        margin: 4px;
    }

    /* push page content below the taller mobile navbar */
    body > *:not(.navbar) {
        padding-top: 140px;
    }
}

/* Off-canvas right-side nav for phones + toggle button */
/* HTML requirements:
   Place a hidden checkbox input with id="nav-toggle" BEFORE the .navbar element,
   and a label with class "nav-toggle-label" and for="nav-toggle".
   Example:
     <input id="nav-toggle" type="checkbox" />
     <label class="nav-toggle-label" for="nav-toggle"></label>
     <nav class="navbar"> ... </nav>
*/

@media (max-width: 480px) {
    /* hide the top-stacked nav behavior and make it a right-side panel */
    .navbar {
        position: fixed;
        top: 0;
        right: 0;
        left: auto;
        height: 100vh;
        width: 78%;
        max-width: 320px;
        transform: translateX(110%); /* hidden by default */
        transition: transform 300ms ease;
        flex-direction: column;
        align-items: flex-start;
        padding: 72px 16px 24px 16px;
        gap: 8px;
        border-radius: 16px 0 0 16px;
        box-shadow: -8px 0 24px rgba(0,0,0,0.25);
        z-index: 1200;
        overflow-y: auto;
        backdrop-filter: blur(8px);
        -webkit-backdrop-filter: blur(8px);
    }

    /* menu links stacked */
    .navbar a {
        display: block;
        width: 100%;
        padding: 12px 14px;
        font-size: 16px;
        margin: 6px 0;
        border-radius: 8px;
        text-align: left;
    }

    /* hide the top padding because nav is side now */
    body > *:not(.navbar) {
        padding-top: 80px;
    }

    /* hidden checkbox toggle */
    #nav-toggle {
        display: none;
    }

    /* the three-dots toggle button (label) */
    .nav-toggle-label {
        position: fixed;
        top: 18px;
        right: 14px;
        width: 44px;
        height: 44px;
        display: flex;
        align-items: center;
        justify-content: center;
        background: rgba(255,255,255,0.12);
        color: #fff;
        font-size: 22px;
        border-radius: 50%;
        z-index: 1300;
        cursor: pointer;
        box-shadow: 0 4px 16px rgba(0,0,0,0.2);
        transition: background 180ms;
    }

    /* three vertical dots using pseudo-element */
    .nav-toggle-label::before {
        content: "â‹®";
        line-height: 1;
        transform: translateY(1px);
    }

    .nav-toggle-label:hover {
        background: rgba(255,255,255,0.18);
    }

    /* when checked, slide the navbar in */
    #nav-toggle:checked ~ .navbar {
        transform: translateX(0);
    }

    /* optionally dim the page when open: a simple overlay element can be created in HTML,
       but without extra HTML we can use label styles to indicate open state */
    #nav-toggle:checked + .nav-toggle-label {
        background: rgba(255,255,255,0.18);
    }
}